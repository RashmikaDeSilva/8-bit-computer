#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 03, 2020 02:03:26 PM +0530  platform: Windows NT

import sys
import serial
import time
from convertCode import convertToMCode
from tkinter import filedialog

ser = serial.Serial()
top = type('test', (object,), {})()

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import programmer_support

serBuffer = ""
machinecode = [0]*16

def readSerial():
    while ser.is_open:
        c = ser.read() # attempt to read a character from Serial        
        #was anything read?
        if len(c) == 0:
            break
        
        # get the buffer from outside of this function
        global serBuffer
        # check if character is a delimeter
        if c == b'u':
            print("Done Uploading")
            top.upload()
        elif c == b'k':
            print("Done Programming")
            top.programme()

    root.after(10, readSerial) # check serial again soon

def vp_start_gui():
    global top
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    programmer_support.init(root, top)
    # after initializing serial, an arduino may need a bit of time to reset
    root.after(100, readSerial)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt, top
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    programmer_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def programme(self):
        self.Label1.configure(text='''state: Done Programming''')
    def upload(self):
        self.Label1.configure(text='''state: Done Uploading''')
    def __init__(self, top=None):
        def connectSerial():
            global ser
            try:
                port = self.Entry1.get()  
                ser = serial.Serial("COM"+port, 9600, timeout=0, writeTimeout=0)
                print("Connected")
                self.Label1.configure(text='''state: COM Port Connected''')
            except:
                print("Cannot Connect")
                self.Label1.configure(text='''state: COM Port Connection Failed''')
        def openFile():
            global machinecode
            filename = filedialog.askopenfilename(initialdir = "E:\IMPORTANT\Projects\8BItComputer\code\Computer_Programmer\programmes",title = "Select file",filetypes = (("8bit_COM","*.bit"),("all files","*.*")))
            if (filename != ""):
                print(filename)
                self.Entry2.delete(0, 'end')
                self.Entry2.insert(0, filename)
                machinecode = convertToMCode(filename)
                print(machinecode)

        def reset():
            if (ser.is_open):
                ser.write("res".encode())
                self.Label1.configure(text='''state: Computer Reset''')

        def upload():
            global machinecode
            ser.write("inp".encode())
            time.sleep(2)
            sendStr = ','.join(list(map(str, machinecode)))
            print(sendStr)
            ser.write(sendStr.encode())

        def progmode():
            ser.write("prog".encode())
        
        def abc():
            print("Hello")

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("324x260+656+221")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("8 BitbComputer Programmer")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.667, rely=0.092, height=34, width=77)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Connect''')
        self.Button1.configure(command=connectSerial)

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.394, rely=0.092,height=30, relwidth=0.194)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")

        self.Entry2 = tk.Entry(top)
        self.Entry2.place(relx=0.091, rely=0.321,height=30, relwidth=0.497)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(insertbackground="black")

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.667, rely=0.321, height=34, width=77)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Choose File''')
        self.Button2.configure(command=openFile)

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.062, rely=0.78, height=21, width=194)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''state: Idle''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.091, rely=0.55, height=31, width=34)
        self.Label2.configure(background="#008000")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.212, rely=0.55, height=31, width=34)
        self.Label3.configure(background="#008000")
        self.Label3.configure(cursor="fleur")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.667, rely=0.505, height=34, width=77)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Upload''')
        self.Button3.configure(command=upload)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.091, rely=0.092, height=21, width=57)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''Com Port''')

        self.Button4 = tk.Button(top)
        self.Button4.place(relx=0.667, rely=0.672, height=34, width=77)
        self.Button4.configure(activebackground="#ececec")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''RESET''')
        self.Button4.configure(command=reset)

        self.Button5 = tk.Button(top)
        self.Button5.place(relx=0.667, rely=0.850, height=34, width=77)
        self.Button5.configure(activebackground="#ececec")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''Prog Mode''')
        self.Button5.configure(command=progmode)

if __name__ == '__main__':
    vp_start_gui()





